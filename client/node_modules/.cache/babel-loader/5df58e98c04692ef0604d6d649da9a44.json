{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chola\\\\Desktop\\\\programowanie\\\\MERNv2\\\\client\\\\src\\\\components\\\\features\\\\PostForm\\\\PostForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Editor from 'react-medium-editor';\nimport 'medium-editor/dist/css/medium-editor.css';\nimport 'medium-editor/dist/css/themes/default.css';\nimport TextFiled from '../../common/TextField/TextField';\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\nimport Button from '../../common/Button/Button';\nimport Alert from '../../common/Alert/Alert';\nimport Spinner from '../../common/Spinner/Spinner';\nimport './PostForm.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PostForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: {\n        title: '',\n        author: '',\n        content: ''\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        post\n      } = this.state;\n      this.setState({\n        post: { ...post,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleEditor = text => {\n      const {\n        post\n      } = this.state;\n      this.setState({\n        post: { ...post,\n          content: text\n        }\n      });\n    };\n\n    this.addPost = e => {\n      const {\n        addPost\n      } = this.props;\n      const {\n        post\n      } = this.state;\n      e.preventDefault();\n      addPost(post);\n    };\n  }\n\n  render() {\n    const {\n      post\n    } = this.state;\n    const {\n      request\n    } = this.props;\n    const {\n      handleChange,\n      handleEditor,\n      addPost\n    } = this;\n    if (request.error) return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"error\",\n      children: request.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 34\n    }, this);else if (request.send) return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: \"Post has been added!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }, this);else if (request.pending) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }, this);else return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addPost,\n      children: [/*#__PURE__*/_jsxDEV(TextFiled, {\n        label: \"Title\",\n        name: \"title\",\n        value: post.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextFiled, {\n        label: \"Author\",\n        name: \"author\",\n        value: post.author,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"Edit post content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        className: \"content-editor\",\n        text: post.content,\n        option: {\n          placeholder: false,\n          toolbar: {\n            buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3']\n          }\n        },\n        onChange: handleEditor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/chola/Desktop/programowanie/MERNv2/client/src/components/features/PostForm/PostForm.js"],"names":["React","connect","Editor","TextFiled","SectionTitle","Button","Alert","Spinner","PostForm","Component","state","post","title","author","content","handleChange","e","setState","target","name","value","handleEditor","text","addPost","props","preventDefault","render","request","error","send","pending","placeholder","toolbar","buttons"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextFiled from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\n\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n    state = {\r\n        post: {\r\n            title: '',\r\n            author: '',\r\n            content: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {post} = this.state;\r\n        this.setState({post: {...post, [e.target.name]: e.target.value}});\r\n    }\r\n    handleEditor = (text) => {\r\n        const {post} = this.state;\r\n        this.setState({post: {...post, content: text}});\r\n    }\r\n    addPost = (e) => {\r\n        const {addPost} = this.props;\r\n        const {post} = this.state;\r\n\r\n        e.preventDefault();\r\n        addPost(post);\r\n    }\r\n    render(){\r\n        const {post} = this.state;\r\n        const {request} = this.props;\r\n        const { handleChange, handleEditor, addPost } = this;\r\n\r\n        if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n        else if(request.send) return <Alert variant=\"success\">Post has been added!</Alert>\r\n        else if(request.pending) return <Spinner />\r\n        else return (\r\n            <form onSubmit={addPost}>\r\n                <TextFiled\r\n                    label=\"Title\"\r\n                    name=\"title\"\r\n                    value={post.title}\r\n                    onChange={handleChange}\r\n                />\r\n                <TextFiled\r\n                    label=\"Author\"\r\n                    name=\"author\"\r\n                    value={post.author}\r\n                    onChange={handleChange}\r\n                />\r\n                <SectionTitle>Edit post content</SectionTitle>\r\n                <Editor\r\n                    className=\"content-editor\"\r\n                    text={post.content}\r\n                    option={{placeholder:false, toolbar: {buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3']}}}\r\n                    onChange={handleEditor}\r\n                />\r\n                <Button variant=\"primary\">Add post</Button>\r\n            </form >\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}