{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chola\\\\Desktop\\\\programowanie\\\\MERNv2\\\\client\\\\src\\\\components\\\\features\\\\Posts\\\\Posts.js\";\nimport React from 'react';\nimport Spinner from '../../common/Spinner/Spinner';\nimport { PropTypes } from 'prop-types';\nimport PostsList from '../PostsList/PostsList';\nimport Pagination from '../../common/Pagination/Pagination';\nimport PostsCounter from '../../features/PostsCounter/PostsCounter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Posts extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initialPage: this.props.initialPage || 1,\n      postsPerPage: this.props.postsPerPage || 10,\n      pagination: this.props.pagination || true\n    };\n\n    this.loadPostsPage = page => {\n      const {\n        loadPostsByPage\n      } = this.props;\n      const {\n        postsPerPage\n      } = this.state;\n      loadPostsByPage(page, postsPerPage);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      loadPostsByPage\n    } = this.props;\n    loadPostsByPage(this.state.initialPage, this.state.postsPerPage);\n  }\n\n  render() {\n    const {\n      posts,\n      request,\n      pages\n    } = this.props;\n    const {\n      pagination\n    } = this.state;\n    const {\n      loadPostsPage\n    } = this;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [request.pending && request.success === null && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 61\n      }, this), request.pending && request.success === false && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 62\n      }, this), request.error === null && request.success === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(PostsCounter, {\n          counter: posts.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PostsList, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), pagination === true && /*#__PURE__*/_jsxDEV(Pagination, {\n          pages: pages,\n          onPageChange: loadPostsPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n  })),\n  loadPostsByPage: PropTypes.func.isRequired\n};\nexport default Posts;","map":{"version":3,"sources":["C:/Users/chola/Desktop/programowanie/MERNv2/client/src/components/features/Posts/Posts.js"],"names":["React","Spinner","PropTypes","PostsList","Pagination","PostsCounter","Posts","Component","state","initialPage","props","postsPerPage","pagination","loadPostsPage","page","loadPostsByPage","componentDidMount","render","posts","request","pages","pending","success","error","length","propTypes","arrayOf","shape","id","string","isRequired","title","content","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAAX,IAA0B,CADjC;AAENE,MAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,IAA2B,EAFnC;AAGNC,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAAX,IAAyB;AAH/B,KAD0B;;AAAA,SAUhCC,aAVgC,GAUfC,IAAD,IAAU;AACxB,YAAM;AAACC,QAAAA;AAAD,UAAoB,KAAKL,KAA/B;AACA,YAAM;AAACC,QAAAA;AAAD,UAAiB,KAAKH,KAA5B;AACAO,MAAAA,eAAe,CAACD,IAAD,EAAOH,YAAP,CAAf;AACD,KAd+B;AAAA;;AAMhCK,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACD,MAAAA;AAAD,QAAoB,KAAKL,KAA/B;AACAK,IAAAA,eAAe,CAAC,KAAKP,KAAL,CAAWC,WAAZ,EAAyB,KAAKD,KAAL,CAAWG,YAApC,CAAf;AACD;;AAMDM,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKV,KAAvC;AACA,UAAM;AAACE,MAAAA;AAAD,QAAe,KAAKJ,KAA1B;AACA,UAAM;AAACK,MAAAA;AAAD,QAAkB,IAAxB;AAEA,wBACE;AAAA,iBACGM,OAAO,CAACE,OAAR,IAAmBF,OAAO,CAACG,OAAR,KAAoB,IAAvC,iBAA+C,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADlD,EAEGH,OAAO,CAACE,OAAR,IAAmBF,OAAO,CAACG,OAAR,KAAoB,KAAvC,iBAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFnD,EAGGH,OAAO,CAACI,KAAR,KAAkB,IAAlB,IAA0BJ,OAAO,CAACG,OAAR,KAAoB,IAA9C,iBACA;AAAA,gCACC,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEJ,KAAK,CAACM;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEN;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFD,EAGEN,UAAU,KAAK,IAAf,iBAAuB,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEQ,KAAnB;AAA0B,UAAA,YAAY,EAAEP;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYH;;AAhC+B;;AAkCpCP,KAAK,CAACmB,SAAN,GAAkB;AACdP,EAAAA,KAAK,EAAEhB,SAAS,CAACwB,OAAV,CACLxB,SAAS,CAACyB,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAE1B,SAAS,CAAC2B,MAAV,CAAiBC,UADP;AAEdC,IAAAA,KAAK,EAAE7B,SAAS,CAAC2B,MAAV,CAAiBC,UAFV;AAGdE,IAAAA,OAAO,EAAE9B,SAAS,CAAC2B,MAAV,CAAiBC;AAHZ,GAAhB,CADK,CADO;AAQdf,EAAAA,eAAe,EAAEb,SAAS,CAAC+B,IAAV,CAAeH;AARlB,CAAlB;AAYA,eAAexB,KAAf","sourcesContent":["import React from 'react';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounter';\r\n\r\nclass Posts extends React.Component {\r\n  state = {\r\n    initialPage: this.props.initialPage || 1,\r\n    postsPerPage: this.props.postsPerPage || 10,\r\n    pagination: this.props.pagination || true,\r\n  }\r\n    componentDidMount(){\r\n      const {loadPostsByPage} = this.props;\r\n      loadPostsByPage(this.state.initialPage, this.state.postsPerPage);\r\n    }\r\n    loadPostsPage = (page) => {\r\n      const {loadPostsByPage} = this.props;\r\n      const {postsPerPage} = this.state;\r\n      loadPostsByPage(page, postsPerPage);\r\n    }\r\n    render(){\r\n        const { posts, request, pages } = this.props;\r\n        const {pagination} = this.state;\r\n        const {loadPostsPage} = this;\r\n      \r\n        return (\r\n          <div>\r\n            {request.pending && request.success === null && <Spinner />}\r\n            {request.pending && request.success === false && <h1>error</h1>}\r\n            {request.error === null && request.success === true &&\r\n             <div>\r\n              <PostsCounter counter={posts.length} />\r\n              <PostsList posts={posts} />\r\n              {pagination === true && <Pagination pages={pages} onPageChange={loadPostsPage}/>}\r\n            </div>}\r\n          </div>\r\n        )\r\n    }\r\n}\r\nPosts.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    loadPostsByPage: PropTypes.func.isRequired,\r\n  };\r\n  \r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}