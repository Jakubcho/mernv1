{"version":3,"sources":["components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/PageContainer/PageContainer.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Spinner/Spinner.js","components/common/Button/Button.js","components/common/SectionTitle/SectionTitle.js","components/common/HtmlBox/HtmlBox.js","components/common/CutText/CutText.js","components/features/PostSummary/PostSummary.js","components/features/PostsList/PostsList.js","components/common/Pagination/Pagination.js","components/features/PostsCounter/PostsCounter.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/common/TextField/TextField.js","components/common/Alert/Alert.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","components/common/SmallTitle/SmallTitle.js","components/features/Post/Post.js","components/features/Post/PostContainer.js","components/pages/SinglePost/SinglePostPage.js","App.js","redux/store.js","index.js"],"names":["Logo","links","location","className","MainMenu","map","link","index","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","PageContainer","children","MainLayout","PageTitle","API_URL","createActionName","name","LOAD_POSTS","LOAD_POST","START_REQUEST","END_REQUEST","ERROR_REQUEST","SEND_REQUEST","LOAD_POSTS_PAGE","loadPostsByPage","payload","type","getRequest","posts","request","getPages","Math","ceil","amount","postsPerPage","startRequest","endRequest","errorRequest","error","initialState","data","pending","success","send","singlePost","presentPage","Spinner","animationIn","animationOut","Button","variant","otherProps","SectionTitle","HtmlBox","ReactHtmlParser","CutText","content","maxLength","length","substr","lastIndexOf","PostSummary","id","PostsList","post","Pagination","initialPage","newPage","setState","onPageChange","pages","changePage","onClick","Array","el","page","PostsCounter","counter","Posts","pagination","loadPostsPage","connect","dispatch","numberOfPosts","a","startAt","limit","axios","get","res","message","loadPostsByPageRequest","Home","PostsPage","Contact","NotFound","TextField","value","label","onChange","Alert","icon","PostForm","author","handleChange","e","target","handleEditor","text","addPost","preventDefault","onSubmit","option","placeholder","toolbar","buttons","addPostRequest","AddPost","SmallTitle","Post","loadPost","loadPostRequest","SinglePost","match","params","App","exact","component","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abc82ff9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\nimport './NavBar.scss';\r\n\r\nclass NavBar extends React.Component {\r\n    state = {\r\n        links: [\r\n            {path: '/', title: 'Home'},\r\n            {path: '/posts', title: 'Posts'},\r\n            {path: '/contact', title: 'Contact'},\r\n            {path: '/posts/new', title: 'Add post'},\r\n        ]\r\n    }\r\n    render(){\r\n        const {links} = this.state;\r\n\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <Logo />\r\n                <MainMenu links={links} />\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\n\r\nconst MainLayout = ({children}) => (\r\n    <div>\r\n        <PageContainer>\r\n            <NavBar/>\r\n            {children}\r\n        </PageContainer>\r\n    </div>\r\n)\r\n\r\n\r\nexport default MainLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const API_URL = 'http://localhost:8000/api';","import {API_URL} from '../config';\r\nimport axios from 'axios';\r\n\r\n\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const LOAD_POST = createActionName('LOAD_POST');\r\nexport const ADD_POST = createActionName('ADD_POST');\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const SEND_REQUEST = createActionName('SEND_REQUEST');\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\n\r\n\r\nexport const loadPosts = payload => ({payload, type:LOAD_POSTS});\r\nexport const loadPost = (payload) => ({payload, type: LOAD_POST});\r\nexport const loadPostsByPage = payload => ({payload, type: LOAD_POSTS_PAGE});\r\n\r\nexport const getPosts = ({posts}) => posts.data;\r\nexport const getRequest = ({posts}) => posts.request;\r\nexport const getPost = ({posts}) => posts.singlePost;\r\nexport const getPages = ({posts}) => Math.ceil(posts.amount/posts.postsPerPage);\r\n\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const sendRequest = () => ({type: SEND_REQUEST});\r\n\r\n\r\nconst initialState = {\r\n  data: [],\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null,\r\n    send: null\r\n  },\r\n  singlePost: {},\r\n  amount: 0,\r\n  postsPerPage: 10,\r\n  presentPage: 1,\r\n\r\n};\r\n\r\n\r\nexport default function reducer(statePart=initialState, action){\r\n  switch(action.type){\r\n    case LOAD_POSTS_PAGE:\r\n        return {...statePart, \r\n          postsPerPage: action.payload.postsPerPage,\r\n          presentPage: action.payload.presentPage,\r\n          amount: action.payload.amount,\r\n          data: [...action.payload.posts],\r\n        }\r\n    case SEND_REQUEST:\r\n        return {...statePart, request: {pending: false, error: null, send: true}};\r\n    case LOAD_POST:\r\n        return {...statePart, singlePost: action.payload}\r\n    case LOAD_POSTS:\r\n      return {...statePart, data: action.payload};\r\n    case START_REQUEST:\r\n      return {...statePart, request: {pending: true, error:null, success: null}}\r\n    case END_REQUEST:\r\n      return {...statePart, request: {pending: false, error:null, success: true}}\r\n    case ERROR_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: action.error, success: false } };\r\n    default: \r\n      return statePart;\r\n    }\r\n}\r\n\r\n\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    \r\n    try {\r\n\r\n      let res = await axios.get(`${API_URL}/posts`);\r\n     \r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest())\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\nexport const loadPostRequest = (id) => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n\r\n    try {\r\n\r\n      let res = await axios.get(`${API_URL}/posts/${id}`);\r\n\r\n      dispatch(loadPost(res.data)); \r\n      dispatch(endRequest())\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\nexport const addPostRequest = (post) => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    \r\n    try {\r\n\r\n      let res = await axios.post(`${API_URL}/posts`, post);\r\n      \r\n      dispatch(sendRequest());\r\n    } catch(e){\r\n      dispatch(errorRequest(e.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const loadPostsByPageRequest = (page, numberOfPosts) => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n\r\n    try {\r\n      \r\n      let postsPerPage = numberOfPosts || 10;\r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n      \r\n      let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n      \r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page\r\n      }\r\n\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest())\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message))\r\n    }\r\n  } \r\n}","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser  from 'react-html-parser';\r\n\r\nconst HtmlBox = ({children, ...otherProps}) => (\r\n    <div {...otherProps} className=\"html-box\">\r\n        {ReactHtmlParser(children)}\r\n    </div>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n    children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;\r\n  ","const CutText  = (content, maxLength) => {\r\n    if(content.length < 1) return 'Error';\r\n    if(content.length <= maxLength) return content;\r\n    return content.substr(0, content.lastIndexOf(' ', maxLength)) + '...';\r\n  };\r\n\r\nexport default CutText;","import React from 'react';\r\nimport {PropTypes} from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Buttom from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SectionTitle/SectionTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport CutText from '../../common/CutText/CutText';\r\nimport './PostSummary.scss';\r\n\r\nconst PostSummary = ({id, title, content}) => (\r\n    <article className=\"post-summary\">\r\n        <SmallTitle>{title}</SmallTitle>\r\n        <HtmlBox>{CutText(content,250)}</HtmlBox>\r\n        <Buttom variant=\"primary\" ><Link to={`/posts/${id}`}>Read more</Link></Buttom>\r\n    </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n    id:PropTypes.string.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default PostSummary;","import React from 'react';\r\nimport {PropTypes} from 'prop-types';\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({posts}) => (\r\n    <div>\r\n        <section className=\"posts-list\">\r\n            {posts.map(post=> <PostSummary key={post.id} {...post} />)}\r\n        </section>\r\n    </div>\r\n)\r\n\r\nPostsList.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            content: PropTypes.string.isRequired\r\n        })\r\n    ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FaChevronLeft, FaChevronRight} from 'react-icons/fa'; \r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n    state = {\r\n        presentPage: this.props.initialPage,\r\n    }\r\n    changePage(newPage){\r\n        this.setState({presentPage: newPage})\r\n        this.props.onPageChange(newPage);\r\n    }\r\n    render(){\r\n        const {pages, onPageChange} = this.props;\r\n        const {presentPage} = this.state;\r\n        const {changePage} = this;\r\n        return (\r\n            <div className=\"pagination\">\r\n                <ul className=\"pagination__list\">\r\n                <FaChevronLeft className=\"pagination__list__icon\" onClick={() => this.changePage(pages -1)}/>\r\n                    {[...Array(pages)].map((el, page) => \r\n                        <li\r\n                            key={page}\r\n                            onClick={() => {this.changePage(page)}}\r\n                            className={`pagination__list__item ${((page++) === presentPage) ? 'pagination__list__item--active': ''}`}>\r\n                        {page}\r\n                        </li>\r\n                    )}\r\n                    <FaChevronRight className=\"pagination__list__icon\" onClick={() => this.changePage(pages)}/>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPagination.propTypes  = {\r\n    pages: PropTypes.number.isRequired,\r\n    initialPage: PropTypes.number,\r\n    onPageChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\nclass PostsCounter extends React.Component {\r\n    state = {\r\n        counter: this.props.counter\r\n    }\r\n    render(){\r\n        const counter = this.state.counter;\r\n        return (\r\n            <div>\r\n               <h3>Posts number: {counter}</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostsCounter;","import React from 'react';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounter';\r\n\r\nclass Posts extends React.Component {\r\n  state = {\r\n    initialPage: this.props.initialPage || 1,\r\n    postsPerPage: this.props.postsPerPage || 10,\r\n    pagination: this.props.pagination || true,\r\n  }\r\n    componentDidMount(){\r\n      const {loadPostsByPage} = this.props;\r\n      loadPostsByPage(this.state.initialPage, this.state.postsPerPage);\r\n    }\r\n    loadPostsPage = (page) => {\r\n      const {loadPostsByPage} = this.props;\r\n      const {postsPerPage} = this.state;\r\n      loadPostsByPage(page, postsPerPage);\r\n    }\r\n    render(){\r\n        const { posts, request, pages } = this.props;\r\n        const {pagination} = this.state;\r\n        const {loadPostsPage} = this;\r\n      \r\n        return (\r\n          <div>\r\n            {request.pending && request.success === null && <Spinner />}\r\n            {request.pending && request.success === false && <h1>error</h1>}\r\n            {request.error === null && request.success === true &&\r\n             <div>\r\n              <PostsCounter counter={posts.length} />\r\n              <PostsList posts={posts} />\r\n              {pagination === true && <Pagination pages={pages} onPageChange={loadPostsPage}/>}\r\n            </div>}\r\n          </div>\r\n        )\r\n    }\r\n}\r\nPosts.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    loadPostsByPage: PropTypes.func.isRequired,\r\n  };\r\n  \r\n\r\nexport default Posts;","import {connect} from 'react-redux';\r\nimport {getPosts, getRequest, loadPostsByPageRequest, getPages} from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: getPosts(state),\r\n    request: getRequest(state),\r\n    pages: getPages(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst Home = () => (\r\n    <div>\r\n        <PageTitle>Blog</PageTitle>\r\n        <Posts initialPage={1} postsPerPage={3}  pagination='false' />\r\n    </div>\r\n)\r\n\r\nexport default Home;","import React from 'react';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst PostsPage = () => (\r\n    <div>\r\n        <PageTitle>Posts list</PageTitle>\r\n        <Posts initialPage={1} postsPerPage={10} />\r\n    </div>\r\n)\r\n\r\nexport default PostsPage;","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nconst Contact = () => (\r\n    <div>\r\n        <PageTitle>Contac </PageTitle>\r\n        <p>Comapny Name</p>\r\n        <p>Street number, street name</p>\r\n        <p>Mobile number: xxx-xxx-xxx</p>\r\n    </div>\r\n)\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>NotFound</div>\r\n)\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextFiled from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\n\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n    state = {\r\n        post: {\r\n            title: '',\r\n            author: '',\r\n            content: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {post} = this.state;\r\n        this.setState({post: {...post, [e.target.name]: e.target.value}});\r\n    }\r\n    handleEditor = (text) => {\r\n        const {post} = this.state;\r\n        this.setState({post: {...post, content: text}});\r\n    }\r\n    addPost = (e) => {\r\n        const {addPost} = this.props;\r\n        const {post} = this.state;\r\n\r\n        e.preventDefault();\r\n        addPost(post);\r\n    }\r\n    render(){\r\n        const {post} = this.state;\r\n        const {request} = this.props;\r\n        const { handleChange, handleEditor, addPost } = this;\r\n\r\n        if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n        else if(request.send) return <Alert variant=\"success\">Post has been added!</Alert>\r\n        else if(request.pending) return <Spinner />\r\n        else return (\r\n            <form onSubmit={addPost}>\r\n                <TextFiled\r\n                    label=\"Title\"\r\n                    name=\"title\"\r\n                    value={post.title}\r\n                    onChange={handleChange}\r\n                />\r\n                <TextFiled\r\n                    label=\"Author\"\r\n                    name=\"author\"\r\n                    value={post.author}\r\n                    onChange={handleChange}\r\n                />\r\n                <SectionTitle>Edit post content</SectionTitle>\r\n                <Editor\r\n                    className=\"content-editor\"\r\n                    text={post.content}\r\n                    option={{placeholder:false, toolbar: {buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3']}}}\r\n                    onChange={handleEditor}\r\n                />\r\n                <Button variant=\"primary\">Add post</Button>\r\n            </form >\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostForm;","import {connect} from 'react-redux';\r\nimport {getRequest, addPostRequest} from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n    request: getRequest(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addPost: (post) => dispatch(addPostRequest(post)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPost = () => (\r\n    <div>\r\n        <PostForm />\r\n    </div>\r\n)\r\n\r\nexport default AddPost;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport { PropTypes } from 'prop-types';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\n\r\n\r\nclass Post extends React.Component {\r\n    componentDidMount(){\r\n        const {loadPost, id} = this.props;\r\n        loadPost(id);\r\n    }\r\n    render(){\r\n      const {request, post} = this.props;\r\n\r\n      return (\r\n        <div>\r\n          {request.pending && request.success === null && <Spinner />}\r\n          {request.pending && request.success === false && <h1>error</h1>}\r\n          {request.error === null && request.success === true &&\r\n            <article className=\"post-summary\">\r\n              <SmallTitle>{post.title}</SmallTitle>\r\n              <HtmlBox>{post.content}</HtmlBox>\r\n              Author: {post.author}\r\n            </article >\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nPost.propTypes = {\r\n      post: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        author: PropTypes.string.isRequired,\r\n      })\r\n  };\r\nexport default Post;\r\n","import {connect} from 'react-redux';\r\nimport {getRequest, getPost, loadPostRequest, loadPost} from '../../../redux/postsRedux';\r\nimport Post from './Post';\r\n\r\nconst mapStateToProps = state => ({ \r\n   request: getRequest(state),\r\n   post: getPost(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadPost: (id) => dispatch(loadPostRequest(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","import React from 'react';\r\nimport Post from '../../features/Post/PostContainer';\r\n\r\nclass SinglePost extends React.Component {\r\n    render(){\r\n        const id = this.props.match.params.id;\r\n        return (\r\n            <div>\r\n                <Post id={id} />\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default SinglePost;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport MainLayout from './components/layout/MainLayout/MainLayout';\nimport Home from './components/pages/Home/HomePage';\nimport PostsPage from './components/pages/Posts/PostsPage';\nimport Contact from './components/pages/Contact/ContactPage';\nimport NotFound from './components/pages/NotFound/NotFoundPage';\nimport AddPost from './components/pages/AddPost/AddPostPage';\nimport SinglePost from './components/pages/SinglePost/SinglePostPage';\n\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n  }\n    \n  render() {\n    return (\n      <MainLayout>\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/contact' exact component={Contact} />\n          <Route path='/posts' exact component={PostsPage} />\n          <Route path='/posts/new' exact component={AddPost} />\n          <Route path='/posts/:id' exact component={SinglePost} />\n          <Route component={NotFound} />\n        </Switch>\n      </MainLayout>\n    )\n  }\n}\nexport default App;\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n//import reducers;\r\nimport posts from './postsRedux';\r\n\r\n//combineReducers\r\nconst rootReducer = combineReducers({\r\n    posts,\r\n})\r\n\r\n\r\n//create store\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n          applyMiddleware(thunk)\r\n      )\r\n  );\r\n  \r\n\r\nexport default store;\r\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App/>\n    </Router>\n</Provider>\n)\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}